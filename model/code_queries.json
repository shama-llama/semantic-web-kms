{
  "python": {
    "FunctionDefinition": ["(function_definition name: (identifier) @name) @function"],
    "Parameter": ["(parameters (identifier) @param)"],
    "ClassDefinition": ["(class_definition name: (identifier) @name) @class"],
    "Attribute": ["(assignment left: (attribute) @attr)"],
    "FunctionCall": ["(call function: (identifier) @func)"],
    "ImportDeclaration": ["(import_statement) @import","(import_from_statement) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "javascript": {
    "FunctionDefinition": [
      "(function_declaration name: (identifier) @name) @function",
      "(arrow_function) @function",
      "(method_definition name: (property_identifier) @name) @method"
    ],
    "Parameter": ["(formal_parameters (identifier) @param)"],
    "ClassDefinition": ["(class_declaration name: (identifier) @name) @class"],
    "Attribute": ["(public_field_definition name: (property_identifier) @attr)"],
    "FunctionCall": ["(call_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(import_statement) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "typescript": {
    "FunctionDefinition": [
      "(function_declaration name: (identifier) @name) @function",
      "(arrow_function) @function"
    ],
    "Parameter": ["(formal_parameters (identifier) @param)"],
    "ClassDefinition": ["(class_declaration name: (identifier) @name) @class"],
    "Attribute": ["(public_field_definition name: (property_identifier) @attr)"],
    "FunctionCall": ["(call_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(import_statement) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "java": {
    "FunctionDefinition": ["(method_declaration name: (identifier) @name) @method"],
    "Parameter": ["(formal_parameter name: (identifier) @param)"],
    "ClassDefinition": ["(class_declaration name: (identifier) @name) @class"],
    "Attribute": ["(field_declaration declarator: (variable_declarator name: (identifier) @attr))"],
    "FunctionCall": ["(method_invocation name: (identifier) @func)"],
    "ImportDeclaration": ["(import_declaration) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "c_sharp": {
    "FunctionDefinition": ["(method_declaration name: (identifier) @name) @method"],
    "Parameter": ["(parameter name: (identifier) @param)"],
    "ClassDefinition": ["(class_declaration name: (identifier) @name) @class"],
    "Attribute": ["(field_declaration declarator: (variable_declarator name: (identifier) @attr))"],
    "FunctionCall": ["(invocation_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(using_directive) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "go": {
    "FunctionDefinition": ["(function_declaration name: (identifier) @name) @function"],
    "Parameter": ["(parameter_declaration name: (identifier) @param)"],
    "ClassDefinition": ["(type_spec name: (type_identifier) @name) @type"],
    "Attribute": ["(field_declaration name: (identifier) @attr)"],
    "FunctionCall": ["(call_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(import_spec) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "ruby": {
    "FunctionDefinition": ["(method name: (identifier) @name) @method"],
    "Parameter": ["(parameters (identifier) @param)"],
    "ClassDefinition": ["(class name: (constant) @name) @class"],
    "Attribute": ["(assignment left: (identifier) @attr)"],
    "FunctionCall": ["(call method: (identifier) @func)"],
    "ImportDeclaration": ["(require_statement) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "php": {
    "FunctionDefinition": [
      "(function_definition name: (name) @name) @function",
      "(anonymous_function_creation_expression) @function"
    ],
    "Parameter": ["(formal_parameters (parameter name: (variable_name) @param))"],
    "ClassDefinition": ["(class_declaration name: (name) @name) @class"],
    "Attribute": ["(property_element name: (variable_name) @attr)"],
    "FunctionCall": ["(function_call_expression function: (name) @func)"],
    "ImportDeclaration": ["(namespace_use_declaration) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "rust": {
    "FunctionDefinition": ["(function_item name: (identifier) @name) @function"],
    "Parameter": ["(parameter_pattern name: (identifier) @param)"],
    "ClassDefinition": ["(struct_item name: (type_identifier) @name) @struct"],
    "Attribute": ["(struct_field name: (identifier) @attr)"],
    "FunctionCall": ["(call_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(use_declaration) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "html": {
    "CodeComment": ["(comment) @comment"]
  },
  "css": {
    "CodeComment": ["(comment) @comment"]
  },
  "scss": {
    "CodeComment": ["(comment) @comment"]
  },
  "bash": {
    "FunctionDefinition": ["(function_definition name: (word) @name) @function"],
    "CodeComment": ["(comment) @comment"]
  },
  "swift": {
    "ClassDefinition": ["(class_declaration name: (identifier) @name) @class"],
    "FunctionDefinition": ["(function_declaration name: (identifier) @name) @function"],
    "Parameter": ["(parameter_clause (parameter name: (identifier) @param))"],
    "Attribute": ["(variable_declaration name: (identifier) @attr)"],
    "FunctionCall": ["(function_call_expression function: (identifier) @func)"],
    "ImportDeclaration": ["(import_declaration) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "scala": {
    "ClassDefinition": [
      "(class_definition name: (identifier) @name) @class",
      "(trait_definition name: (identifier) @name) @class"
    ],
    "FunctionDefinition": ["(function_definition name: (identifier) @name) @function"],
    "Parameter": ["(parameters (identifier) @param)"],
    "Attribute": ["(val_declaration name: (identifier) @attr)", "(var_declaration name: (identifier) @attr)"],
    "FunctionCall": ["(function_application function: (identifier) @func)"],
    "ImportDeclaration": ["(import_declaration) @import"],
    "CodeComment": ["(comment) @comment"]
  },
  "lua": {
    "FunctionDefinition": ["(function_declaration name: (identifier) @name) @function"],
    "Parameter": ["(parameters (identifier) @param)"],
    "CodeComment": ["(comment) @comment"]
  }
} 