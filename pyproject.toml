[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-web-kms"
version = "0.1.0"
description = "Semantic Web Knowledge Management System"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "rdflib==7.1.4",
    "rich==13.7.1",
    "gitpython==3.1.44",
    "tree-sitter-languages==1.10.2",
    "markdown-it-py==3.0.0",
    "requests==2.32.4",
    "flask==3.1.1",
    "flask-caching==2.3.1",
    "flask-cors==6.0.1",
    "spacy==3.8.7",
    "pillow==10.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "flake8==7.3.0",
    "mypy==1.16.1",
    "black==25.1.0",
    "isort==6.0.1",
    "pydocstyle==6.3.0",
    "vulture==2.14",
    "pyright==1.1.402",
    "pip-audit==2.9.0",
    "bandit==1.8.6",
    "build==1.2.2.post1",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["app"]
known_third_party = ["rdflib", "rich", "git", "tree_sitter_languages", "markdown_it"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# pytest configuration (if you add tests later)
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

# coverage configuration (if you add coverage later)
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["tests*", "scripts*", "docs*", "portal*", "mappings*", "model*", "output*", "logs*", "test_data*", "ontologies*"] 